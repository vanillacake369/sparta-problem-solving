def solution(n, a, b):
    count = 0
    """
    이분할로 줄여나가면서 라운드 수를 카운트하고,
    둘이 만나게 되는 순간 이분할을 종료하고
    라운드를 반환합니다.
    """
    
    """
    1. 이분탐색이라고 생각해서 재귀호출 혹은 루프문으로 처리해야겠다고 판단했습니다
    2. "참가자의 번호는 다시 1번부터 N/2번을 차례대로 배정" 에 주목했습니다.
        이에 대해서 +1 이후 // 2 를 나누어주었습니다.
        +1 을 하는 이유는 1 // 2 가 0 이기 때문입니다.
        예를 들어, 1, 2, 3, 4 인 경우 재배정 시 1, 1, 2, 2 가 되어야합니다.
        // 2 만 하는 경우 1, 2, 3, 4 -> 0, 1, 1, 2 가 되기 때문에 
        +1 이후 // 2를 통해 1, 2, 3, 4 -> 1, 1, 2, 2 로 처리하였습니다.
    3. 서로 같아지기 전까지 라운드 카운트를 늘립니다.
    4. 루프 탈출 후 라운드 카운트를 반환합니다.  
    """
    while a != b:
        a = (a + 1) // 2
        b = (b + 1) // 2
        count += 1
    return count
